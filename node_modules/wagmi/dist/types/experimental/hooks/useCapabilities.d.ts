import { type Config, type ResolvedRegister } from '@wagmi/core';
import { type GetCapabilitiesData, type GetCapabilitiesErrorType, type GetCapabilitiesOptions, type GetCapabilitiesQueryFnData, type GetCapabilitiesQueryKey } from '@wagmi/core/experimental';
import { type Evaluate } from '@wagmi/core/internal';
import type { ConfigParameter, QueryParameter } from '../../types/properties.js';
import { type UseQueryReturnType } from '../../utils/query.js';
export type UseCapabilitiesParameters<config extends Config = Config, selectData = GetCapabilitiesData> = Evaluate<GetCapabilitiesOptions & ConfigParameter<config> & QueryParameter<GetCapabilitiesQueryFnData, GetCapabilitiesErrorType, selectData, GetCapabilitiesQueryKey>>;
export type UseCapabilitiesReturnType<selectData = GetCapabilitiesData> = UseQueryReturnType<selectData, GetCapabilitiesErrorType>;
/** https://wagmi.sh/react/api/hooks/useCapabilities */
export declare function useCapabilities<config extends Config = ResolvedRegister['config'], selectData = GetCapabilitiesData>(parameters?: UseCapabilitiesParameters<config, selectData>): UseCapabilitiesReturnType<selectData>;
//# sourceMappingURL=useCapabilities.d.ts.map