import type { Config, ResolvedRegister } from '@wagmi/core';
import { type ShowCallsStatusData, type ShowCallsStatusErrorType, type ShowCallsStatusMutate, type ShowCallsStatusMutateAsync, type ShowCallsStatusVariables } from '@wagmi/core/experimental';
import type { Evaluate } from '@wagmi/core/internal';
import type { ConfigParameter } from '../../types/properties.js';
import type { UseMutationParameters, UseMutationReturnType } from '../../utils/query.js';
export type UseShowCallsStatusParameters<config extends Config = Config, context = unknown> = Evaluate<ConfigParameter<config> & {
    mutation?: UseMutationParameters<ShowCallsStatusData, ShowCallsStatusErrorType, ShowCallsStatusVariables, context> | undefined;
}>;
export type UseShowCallsStatusReturnType<context = unknown> = Evaluate<UseMutationReturnType<ShowCallsStatusData, ShowCallsStatusErrorType, ShowCallsStatusVariables, context> & {
    showCallsStatus: ShowCallsStatusMutate;
    showCallsStatusAsync: ShowCallsStatusMutateAsync;
}>;
/** https://wagmi.sh/react/api/hooks/useShowCallsStatus */
export declare function useShowCallsStatus<config extends Config = ResolvedRegister['config'], context = unknown>(parameters?: UseShowCallsStatusParameters<config, context>): UseShowCallsStatusReturnType<context>;
//# sourceMappingURL=useShowCallsStatus.d.ts.map