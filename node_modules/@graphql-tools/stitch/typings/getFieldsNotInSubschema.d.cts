import { FieldNode, FragmentDefinitionNode, GraphQLField, GraphQLInterfaceType, GraphQLNamedOutputType, GraphQLObjectType, GraphQLSchema, SelectionNode, SelectionSetNode } from 'graphql';
import { StitchingInfo } from '@graphql-tools/delegate';
export declare function getFieldsNotInSubschema(schema: GraphQLSchema, stitchingInfo: StitchingInfo, gatewayType: GraphQLObjectType, subschemaType: GraphQLObjectType, fieldNodes: FieldNode[], fragments: Record<string, FragmentDefinitionNode>, variableValues: Record<string, any>): Array<FieldNode>;
export declare function extractUnavailableFieldsFromSelectionSet(schema: GraphQLSchema, fieldType: GraphQLNamedOutputType, fieldSelectionSet: SelectionSetNode, shouldAdd: (fieldType: GraphQLObjectType | GraphQLInterfaceType, selection: FieldNode) => boolean): SelectionNode[];
export declare function extractUnavailableFields(schema: GraphQLSchema, field: GraphQLField<any, any>, fieldNode: FieldNode, shouldAdd: (fieldType: GraphQLObjectType | GraphQLInterfaceType, selection: FieldNode) => boolean): SelectionNode[];
