import { type GetTransactionCountParameters, type GetTransactionCountReturnType } from '../actions/getTransactionCount.js';
import { type Config } from '../createConfig.js';
import type { ScopeKeyParameter } from '../types/properties.js';
import type { Evaluate, PartialBy } from '../types/utils.js';
export type GetTransactionCountOptions<config extends Config> = Evaluate<PartialBy<GetTransactionCountParameters<config>, 'address'> & ScopeKeyParameter>;
export declare function getTransactionCountQueryOptions<config extends Config>(config: config, options?: GetTransactionCountOptions<config>): {
    readonly queryFn: ({ queryKey }: {
        queryKey: readonly ["transactionCount", {
            address?: `0x${string}` | undefined;
            chainId?: config["chains"][number]["id"] | (config["chains"][number]["id"] extends infer T ? T extends config["chains"][number]["id"] ? T extends config["chains"][number]["id"] ? T : undefined : never : never) | undefined;
            blockNumber?: bigint | undefined;
            blockTag?: import("viem").BlockTag | undefined;
            scopeKey?: string | undefined;
        }];
        signal: AbortSignal;
        meta: Record<string, unknown> | undefined;
    }) => Promise<number>;
    readonly queryKey: readonly ["transactionCount", {
        address?: `0x${string}` | undefined;
        chainId?: config["chains"][number]["id"] | (config["chains"][number]["id"] extends infer T_1 ? T_1 extends config["chains"][number]["id"] ? T_1 extends config["chains"][number]["id"] ? T_1 : undefined : never : never) | undefined;
        blockNumber?: bigint | undefined;
        blockTag?: import("viem").BlockTag | undefined;
        scopeKey?: string | undefined;
    }];
};
export type GetTransactionCountQueryFnData = Evaluate<GetTransactionCountReturnType>;
export type GetTransactionCountData = GetTransactionCountQueryFnData;
export declare function getTransactionCountQueryKey<config extends Config>(options?: GetTransactionCountOptions<config>): readonly ["transactionCount", {
    address?: `0x${string}` | undefined;
    chainId?: config["chains"][number]["id"] | (config["chains"][number]["id"] extends infer T ? T extends config["chains"][number]["id"] ? T extends config["chains"][number]["id"] ? T : undefined : never : never) | undefined;
    blockNumber?: bigint | undefined;
    blockTag?: import("viem").BlockTag | undefined;
    scopeKey?: string | undefined;
}];
export type GetTransactionCountQueryKey<config extends Config> = ReturnType<typeof getTransactionCountQueryKey<config>>;
//# sourceMappingURL=getTransactionCount.d.ts.map