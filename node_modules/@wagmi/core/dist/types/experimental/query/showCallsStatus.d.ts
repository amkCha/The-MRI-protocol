import type { MutateOptions } from '@tanstack/query-core';
import { type Config } from '../../createConfig.js';
import { type Evaluate } from '../../types/utils.js';
import { type ShowCallsStatusErrorType, type ShowCallsStatusParameters, type ShowCallsStatusReturnType } from '../actions/showCallsStatus.js';
export declare function showCallsStatusMutationOptions<config extends Config>(config: config): {
    readonly mutationFn: (variables: ShowCallsStatusParameters) => Promise<void>;
    readonly mutationKey: readonly ["showCallsStatus"];
};
export type ShowCallsStatusData = Evaluate<ShowCallsStatusReturnType>;
export type ShowCallsStatusVariables = ShowCallsStatusParameters;
export type ShowCallsStatusMutate<context = unknown> = (variables: ShowCallsStatusVariables, options?: Evaluate<MutateOptions<ShowCallsStatusData, ShowCallsStatusErrorType, Evaluate<ShowCallsStatusVariables>, context>> | undefined) => void;
export type ShowCallsStatusMutateAsync<context = unknown> = (variables: ShowCallsStatusVariables, options?: Evaluate<MutateOptions<ShowCallsStatusData, ShowCallsStatusErrorType, Evaluate<ShowCallsStatusVariables>, context>> | undefined) => Promise<ShowCallsStatusData>;
//# sourceMappingURL=showCallsStatus.d.ts.map