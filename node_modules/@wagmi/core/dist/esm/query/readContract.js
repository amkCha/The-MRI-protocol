import {} from '@tanstack/query-core';
import {} from 'viem';
import { readContract, } from '../actions/readContract.js';
import {} from '../createConfig.js';
import {} from '../types/properties.js';
import {} from '../types/utils.js';
import { filterQueryOptions } from './utils.js';
export function readContractQueryOptions(config, options = {}) {
    return {
        // TODO: Support `signal` once Viem actions allow passthrough
        // https://tkdodo.eu/blog/why-you-want-react-query#bonus-cancellation
        async queryFn({ queryKey }) {
            const abi = options.abi;
            if (!abi)
                throw new Error('abi is required');
            const { address, functionName, scopeKey: _, ...parameters } = queryKey[1];
            if (!address)
                throw new Error('address is required');
            if (!functionName)
                throw new Error('functionName is required');
            const args = parameters.args;
            return readContract(config, {
                abi,
                address,
                functionName,
                args,
                ...parameters,
            });
        },
        queryKey: readContractQueryKey(options),
    };
}
export function readContractQueryKey(options = {}) {
    const { abi: _, ...rest } = options;
    return ['readContract', filterQueryOptions(rest)];
}
//# sourceMappingURL=readContract.js.map