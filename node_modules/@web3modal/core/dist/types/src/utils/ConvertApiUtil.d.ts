import type { ConvertTokenWithBalance } from './TypeUtil.js';
import type { BlockchainApiConvertAllowanceRequest, BlockchainApiBalanceResponse } from '../utils/TypeUtil.js';
export type TokenInfo = {
    address: `0x${string}`;
    symbol: string;
    name: string;
    decimals: number;
    logoURI: string;
    domainVersion?: string;
    eip2612?: boolean;
    isFoT?: boolean;
    tags?: string[];
};
export declare const ConvertApiUtil: {
    getTokenList(): Promise<ConvertTokenWithBalance[]>;
    fetchGasPrice(): Promise<import("./TypeUtil.js").BlockchainApiGasPriceResponse | null>;
    fetchConvertAllowance({ tokenAddress, userAddress, sourceTokenAmount, sourceTokenDecimals }: Pick<BlockchainApiConvertAllowanceRequest, "tokenAddress" | "userAddress"> & {
        sourceTokenAmount: string;
        sourceTokenDecimals: number;
    }): Promise<boolean>;
    getMyTokensWithBalance(): Promise<ConvertTokenWithBalance[]>;
    mapBalancesToConvertTokens(balances: BlockchainApiBalanceResponse['balances']): ConvertTokenWithBalance[];
};
