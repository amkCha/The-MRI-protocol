import type { Balance } from '@web3modal/common';
import type { CaipAddress, LinkingRecord, CaipNetwork } from './TypeUtil.js';
export declare const CoreHelperUtil: {
    isMobile(): boolean;
    checkCaipNetwork(network: CaipNetwork | undefined, networkName?: string): boolean | undefined;
    isAndroid(): boolean;
    isIos(): boolean;
    isClient(): boolean;
    isPairingExpired(expiry?: number): boolean;
    isAllowedRetry(lastRetry: number): boolean;
    copyToClopboard(text: string): void;
    getPairingExpiry(): number;
    getPlainAddress(caipAddress: CaipAddress): string | undefined;
    wait(milliseconds: number): Promise<unknown>;
    debounce(func: (...args: any[]) => unknown, timeout?: number): (...args: unknown[]) => void;
    isHttpUrl(url: string): boolean;
    formatNativeUrl(appUrl: string, wcUri: string): LinkingRecord;
    formatUniversalUrl(appUrl: string, wcUri: string): LinkingRecord;
    openHref(href: string, target: '_blank' | '_self' | 'popupWindow', features?: string): void;
    preloadImage(src: string): Promise<unknown>;
    formatBalance(balance: string | undefined, symbol: string | undefined): string;
    formatBalance2(balance: string | undefined, symbol: string | undefined): {
        value: string;
        rest: string;
        symbol: string | undefined;
    };
    isRestrictedRegion(): boolean;
    getApiUrl(): "https://api.web3modal.org" | "https://api.web3modal.com";
    getBlockchainApiUrl(): "https://rpc.walletconnect.org" | "https://rpc.walletconnect.com";
    getAnalyticsUrl(): "https://pulse.walletconnect.org" | "https://pulse.walletconnect.com";
    getUUID(): string;
    parseError(error: any): string;
    sortRequestedNetworks(approvedIds: `${string}:${string}`[] | undefined, requestedNetworks?: CaipNetwork[]): CaipNetwork[];
    calculateBalance(array: Balance[]): number;
    formatTokenBalance(number: number): {
        dollars: string | undefined;
        pennies: string | undefined;
    };
    isAddress(address: string): boolean;
};
