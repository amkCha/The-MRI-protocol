import '@web3modal/polyfills';
import { createConfig } from '@wagmi/core';
import { coinbaseWallet, walletConnect, injected } from '@wagmi/connectors';
import { emailConnector } from '../connectors/EmailConnector.js';
import { getTransport } from './helpers.js';
export function defaultWagmiConfig({ projectId, chains, metadata, enableInjected, enableCoinbase, enableEmail, enableWalletConnect, enableEIP6963, ...wagmiConfig }) {
    const connectors = [];
    const transportsArr = chains.map(chain => [
        chain.id,
        getTransport({ chainId: chain.id, projectId })
    ]);
    const transports = Object.fromEntries(transportsArr);
    if (enableWalletConnect !== false) {
        connectors.push(walletConnect({ projectId, metadata, showQrModal: false }));
    }
    if (enableInjected !== false) {
        connectors.push(injected({ shimDisconnect: true }));
    }
    if (enableCoinbase !== false) {
        connectors.push(coinbaseWallet({
            appName: metadata?.name ?? 'Unknown',
            appLogoUrl: metadata?.icons[0] ?? 'Unknown',
            enableMobileWalletLink: true
        }));
    }
    if (enableEmail === true) {
        connectors.push(emailConnector({ chains: [...chains], options: { projectId } }));
    }
    return createConfig({
        chains,
        multiInjectedProviderDiscovery: enableEIP6963 !== false,
        transports,
        ...wagmiConfig,
        connectors
    });
}
//# sourceMappingURL=defaultWagmiCoreConfig.js.map