import { AttestationPayload, Portal } from "../types";
import BaseDataMapper from "./BaseDataMapper";
import { Address } from "viem";
import { Portal_filter, Portal_orderBy } from "../../.graphclient";
export default class PortalDataMapper extends BaseDataMapper<Portal, Portal_filter, Portal_orderBy> {
    typeName: string;
    gqlInterface: string;
    simulateAttest(portalAddress: Address, attestationPayload: AttestationPayload, validationPayloads: string[]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    attest(portalAddress: Address, attestationPayload: AttestationPayload, validationPayloads: string[], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateBulkAttest(portalAddress: Address, attestationPayloads: AttestationPayload[], validationPayloads: string[][]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    bulkAttest(portalAddress: Address, attestationPayloads: AttestationPayload[], validationPayloads: string[][], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateRevoke(portalAddress: Address, attestationId: string): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    revoke(portalAddress: Address, attestationId: string, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateBulkRevoke(portalAddress: Address, attestationIds: string[]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    bulkRevoke(portalAddress: Address, attestationIds: string[], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateReplace(portalAddress: Address, attestationId: string, attestationPayload: AttestationPayload, validationPayloads: string[]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    replace(portalAddress: Address, attestationId: string, attestationPayload: AttestationPayload, validationPayloads: string[], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateBulkReplace(portalAddress: Address, attestationIds: string[], attestationPayloads: AttestationPayload[], validationPayloads: string[][]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            name?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            } | {
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    bulkReplace(portalAddress: Address, attestationIds: string[], attestationPayloads: AttestationPayload[], validationPayloads: string[][], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateRegister(id: Address, name: string, description: string, isRevocable: boolean, ownerName: string): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    register(id: Address, name: string, description: string, isRevocable: boolean, ownerName: string, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateDeployDefaultPortal(modules: Address[], name: string, description: string, isRevocable: boolean, ownerName: string): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    deployDefaultPortal(modules: Address[], name: string, description: string, isRevocable: boolean, ownerName: string, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    getPortalByAddress(id: Address): Promise<unknown>;
    isPortalRegistered(id: Address): Promise<unknown>;
    private executePortalRegistryReadMethod;
    private simulatePortalRegistryContract;
    private simulatePortalContract;
}
//# sourceMappingURL=PortalDataMapper.d.ts.map