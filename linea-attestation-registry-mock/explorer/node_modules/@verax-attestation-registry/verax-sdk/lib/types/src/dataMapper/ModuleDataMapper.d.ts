import { Address } from "viem";
import { Module_filter, Module_orderBy } from "../../.graphclient";
import { AttestationPayload, Module } from "../types";
import BaseDataMapper from "./BaseDataMapper";
export default class ModuleDataMapper extends BaseDataMapper<Module, Module_filter, Module_orderBy> {
    typeName: string;
    gqlInterface: string;
    simulateUpdateRouter(routerAddress: Address): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    updateRouter(routerAddress: Address, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateRegister(name: string, description: string, moduleAddress: Address): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    register(name: string, description: string, moduleAddress: Address, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateRunModules(modulesAddresses: Address[], attestationPayload: AttestationPayload, validationPayloads: string[], value: number): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    runModules(modulesAddresses: Address[], attestationPayload: AttestationPayload, validationPayloads: string[], value: number, waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    simulateBulkRunModules(modulesAddresses: Address[], attestationPayloads: AttestationPayload[], validationPayloads: string[][]): Promise<(Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestLegacy<bigint, number, "legacy">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP2930<bigint, number, "eip2930">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName"> | Omit<{
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    } & {
        account: `0x${string}` | import("viem").Account;
    } & {
        chain: null | undefined;
    } & Omit<import("viem").TransactionRequestEIP1559<bigint, number, "eip1559">, "from" | "data" | "to" | "value"> & {
        value?: bigint | undefined;
    } & {
        dataSuffix?: `0x${string}` | undefined;
    }, "chain" | "functionName">) & {
        chain: undefined;
        functionName: string;
    } & {
        abi: import("viem").Narrow<{
            inputs: never[];
            stateMutability: string;
            type: string;
            name?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            inputs: never[];
            name: string;
            type: string;
            stateMutability?: undefined;
            anonymous?: undefined;
            outputs?: undefined;
        } | {
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            stateMutability?: undefined;
            outputs?: undefined;
        } | {
            inputs: ({
                internalType: string;
                name: string;
                type: string;
                components?: undefined;
            } | {
                components: {
                    internalType: string;
                    name: string;
                    type: string;
                }[];
                internalType: string;
                name: string;
                type: string;
            })[];
            name: string;
            outputs: never[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        }>[];
        address: `0x${string}`;
        functionName: string;
    } & {
        args?: readonly unknown[] | undefined;
    }>;
    bulkRunModules(modulesAddresses: Address[], attestationPayloads: AttestationPayload[], validationPayloads: string[][], waitForConfirmation?: boolean): Promise<Partial<import("viem").TransactionReceipt>>;
    isContractAddress(contractAddress: Address): Promise<unknown>;
    getModulesNumber(): Promise<unknown>;
    isRegistered(moduleAddress: Address): Promise<unknown>;
    getModuleAddress(index: number): Promise<unknown>;
    getModule(moduleAddress: Address): Promise<unknown>;
    private executeReadMethod;
    private simulateContract;
}
//# sourceMappingURL=ModuleDataMapper.d.ts.map