"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executeTransaction = void 0;
// TODO: Use correct type for request
async function executeTransaction(
// eslint-disable-next-line @typescript-eslint/no-explicit-any
request, publicClient, walletClient, waitForConfirmation = false) {
    if (!walletClient) {
        throw new Error("VeraxSDK - Wallet not available");
    }
    try {
        const hash = await walletClient.writeContract(request);
        console.log(`Transaction sent with hash ${hash}`);
        if (waitForConfirmation) {
            // Wait for the transaction to be confirmed
            return await publicClient.waitForTransactionReceipt({ hash });
        }
        return { transactionHash: hash };
    }
    catch (error) {
        // Handle errors or rethrow if needed
        console.error("Error while executing transaction:", error);
        throw error;
    }
}
exports.executeTransaction = executeTransaction;
//# sourceMappingURL=transactionSender.js.map