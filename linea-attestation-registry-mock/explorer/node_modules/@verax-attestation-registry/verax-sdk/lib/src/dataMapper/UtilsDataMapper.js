"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseDataMapper_1 = __importDefault(require("./BaseDataMapper"));
const AttestationRegistry_1 = require("../abi/AttestationRegistry");
const ModuleRegistry_1 = require("../abi/ModuleRegistry");
const PortalRegistry_1 = require("../abi/PortalRegistry");
const SchemaRegistry_1 = require("../abi/SchemaRegistry");
const abiCoder_1 = require("../utils/abiCoder");
class UtilsDataMapper extends BaseDataMapper_1.default {
    constructor() {
        super(...arguments);
        this.typeName = "counter";
        this.gqlInterface = `{
        attestations
        modules
        portals
        schemas
  }`;
    }
    async getModulesNumber() {
        return this.web3Client.readContract({
            abi: ModuleRegistry_1.abiModuleRegistry,
            address: this.conf.moduleRegistryAddress,
            functionName: "getModulesNumber",
        });
    }
    async getPortalsCount() {
        return this.web3Client.readContract({
            abi: PortalRegistry_1.abiPortalRegistry,
            address: this.conf.portalRegistryAddress,
            functionName: "getPortalsCount",
        });
    }
    async getSchemasNumber() {
        return this.web3Client.readContract({
            abi: SchemaRegistry_1.abiSchemaRegistry,
            address: this.conf.schemaRegistryAddress,
            functionName: "getSchemasNumber",
        });
    }
    async getVersionNumber() {
        return this.web3Client.readContract({
            abi: AttestationRegistry_1.abiAttestationRegistry,
            address: this.conf.attestationRegistryAddress,
            functionName: "getVersionNumber",
        });
    }
    async getAttestationIdCounter() {
        return this.web3Client.readContract({
            abi: AttestationRegistry_1.abiAttestationRegistry,
            address: this.conf.attestationRegistryAddress,
            functionName: "getAttestationIdCounter",
        });
    }
    encode(schema, values) {
        return (0, abiCoder_1.encode)(schema, values);
    }
    decode(schema, attestationData) {
        return (0, abiCoder_1.decode)(schema, attestationData);
    }
}
exports.default = UtilsDataMapper;
//# sourceMappingURL=UtilsDataMapper.js.map