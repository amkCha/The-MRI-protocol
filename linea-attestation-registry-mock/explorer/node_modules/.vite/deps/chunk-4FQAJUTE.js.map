{
  "version": 3,
  "sources": ["../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/diff/props.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n          name,\n          useCapture ? eventProxyCapture : eventProxy,\n          useCapture\n        );\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\t// @ts-expect-error olDom should be present on a DOM node\n\t\t\tif (oldDom && !oldDom.isConnected) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["MODE_HYDRATE", "assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "applyRef", "isConnected", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "isArray", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "provider", "componentContext", "renderHook", "count", "newType", "outer", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "__r", "getChildContext", "getSnapshotBeforeUpdate", "indexOf", "diffElementNodes", "diffed", "root", "cb", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "attributes", "__html", "innerHTML", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "Array", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "undefined", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "argsChanged", "_pendingArgs", "useLayoutEffect", "__s", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "__v", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "oldRoot", "_options", "__b", "__r", "diffed", "unmount", "vnode", "parentDom", "__k", "commitQueue", "hasErrored"]
}
